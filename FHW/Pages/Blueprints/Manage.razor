@page "/Blueprints/Manage"

@code {
    [Inject] protected ToastService ToastService { get; set; }
    [Inject] protected PreloadService PreloadService { get; set; }

    private Modal mBpJSON { get; set; } = default!;
    private async Task OnShowBpClick()
    {
        mBpJSON.IsVerticallyCentered = true;
        mBpJSON.ModalType = ModalType.Success;
        mBpJSON.Size = ModalSize.ExtraLarge;
        await mBpJSON.ShowAsync();
    }
    private async Task OnHideBpClick()
    {
        await mBpJSON.HideAsync();
    }

    private Modal mBpPreview { get; set; }
    private async Task OnShowBpPreviewClick()
    {
        mBpPreview.IsVerticallyCentered = true;
        mBpPreview.ModalType = ModalType.Info;
        mBpPreview.Size = ModalSize.ExtraLarge;
        await mBpPreview.ShowAsync();
    }
    private async Task OnHideBpPreviewClick()
    {
        await mBpPreview.HideAsync();
    }

    private string blueprintString { get; set; }
    private string blueprintJSON { get; set; }
    //private Factorio.Blueprint.Book blueprintBook { get; set; }

    private async Task DecryptBP()
    {
        try
        {
            PreloadService.Show(SpinnerColor.Warning);

            await Task.Delay(5000);
            blueprintJSON = Factorio.Tools.Blueprint.Decode(blueprintString);
            await Task.Delay(500);
            if (string.IsNullOrWhiteSpace(blueprintString)) ToastService.Notify(new(ToastType.Danger, $"Ошибка: строка чертежа пустая."));
            else ToastService.Notify(new(ToastType.Success, $"Расшифровка выполнена"));
        }
        catch (Exception ex)
        {
            ToastService.Notify(new(ToastType.Danger, $"Ошибка: {ex}."));
        }
        finally
        {
            PreloadService.Hide();
        }
        
    }

    private async Task EncryptBP()
    {
        try
        {
            PreloadService.Show(SpinnerColor.Danger);

            await Task.Delay(5000);
            blueprintString = Factorio.Tools.Blueprint.Encode(blueprintJSON);
            await Task.Delay(500);
            OnHideBpClick();
            if (string.IsNullOrWhiteSpace(blueprintJSON)) ToastService.Notify(new(ToastType.Danger, $"Ошибка: JSON чертеж пустой."));
            else ToastService.Notify(new(ToastType.Success, $"JSON зашифрован в строку чертежа"));
        }
        catch (Exception ex)
        {
            ToastService.Notify(new(ToastType.Danger, $"Ошибка: {ex}."));
        }
        finally
        {
            PreloadService.Hide();
        }
        
    }
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="card mt-3 mb-3">
                <div class="card-body">
                    <h4 class="card-title">Просмотр чертежей онлайн</h4>
                    <h6 class="text-muted card-subtitle mb-2">Вставьте строку чертежа для расшифровки и просмотра содержимого:</h6>
                    <div class="text-center mb-3">
                        <textarea class="form-control form-control-lg w-100" rows="3" @bind="blueprintString" type="text" />
                    </div>
                    <div class="btn-group" role="group">
                        <button class="btn btn-warning btn-sm" type="button" @onclick="DecryptBP">Расшифровать</button>
                        <button class="btn btn-success btn-sm" type="button" @onclick="OnShowBpClick">JSON</button>
                        <button class="btn btn-info btn-sm" type="button" @onclick="OnShowBpPreviewClick">Просмотр</button>
                    </div>
                    <div class="btn-group" role="group">
                        <button class="btn btn-primary btn-sm" type="button" disabled>Редактировать</button>
                        <button class="btn btn-dark btn-sm" type="button" disabled>Скопировать в клиент</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--<div class="row">
        <div class="col">
            <table class="table">
                <tbody>
                    <tr>
                        <th>Item</th>
                        <td>100</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>-->

    

</div>

<Modal @ref="mBpJSON" Title="JSON">
    <BodyTemplate>
        <textarea class="w-100" rows="10" @bind="blueprintJSON"></textarea>
    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Danger" @onclick="EncryptBP">Зашифровать</Button>
    </FooterTemplate>
</Modal>

<Modal @ref="mBpPreview" Title="Просмотр">
    <BodyTemplate>
        Временно недоступно
    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Danger" @onclick="EncryptBP">Зашифровать</Button>
    </FooterTemplate>
</Modal>